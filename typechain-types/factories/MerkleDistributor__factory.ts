/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MerkleDistributor,
  MerkleDistributorInterface,
} from "../MerkleDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405162000ce238038062000ce2833981810160405281019061003491906100ac565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806001819055505050610152565b60008151905061009181610124565b92915050565b6000815190506100a68161013b565b92915050565b600080604083850312156100bf57600080fd5b60006100cd85828601610082565b92505060206100de85828601610097565b9150509250929050565b60006100f382610104565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61012d816100e8565b811461013857600080fd5b50565b610144816100fa565b811461014f57600080fd5b50565b610b8080620001626000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632e7ba6ef146100515780632eb4a7ab1461006d5780639e34070f1461008b578063fc0c546a146100bb575b600080fd5b61006b600480360381019061006691906105a7565b6100d9565b005b610075610316565b60405161008291906108a2565b60405180910390f35b6100a560048036038101906100a0919061057e565b61031c565b6040516100b29190610887565b60405180910390f35b6100c3610372565b6040516100d09190610843565b60405180910390f35b6100e28561031c565b15610122576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610119906108bd565b60405180910390fd5b600085858560405160200161013993929190610806565b60405160208183030381529060405280519060200120905061019f838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505060015483610396565b6101de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d5906108fd565b60405180910390fd5b6101e786610472565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86866040518363ffffffff1660e01b815260040161024292919061085e565b602060405180830381600087803b15801561025c57600080fd5b505af1158015610270573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102949190610555565b6102d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ca906108dd565b60405180910390fd5b7f4ec90e965519d92681267467f775ada5bd214aa92c0dc93d90a5e880ce9ed0268686866040516103069392919061091d565b60405180910390a1505050505050565b60015481565b6000806101008361032d9190610965565b905060006101008461033f9190610a69565b90506000600260008481526020019081526020016000205490506000826001901b90508081831614945050505050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008082905060005b85518110156104645760008682815181106103e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190508083116104245782816040516020016104079291906107da565b604051602081830303815290604052805190602001209250610450565b80836040516020016104379291906107da565b6040516020818303038152906040528051906020012092505b50808061045c906109e8565b91505061039f565b508381149150509392505050565b6000610100826104829190610965565b90506000610100836104949190610a69565b9050806001901b6002600084815260200190815260200160002054176002600084815260200190815260200160002081905550505050565b6000813590506104db81610b05565b92915050565b60008083601f8401126104f357600080fd5b8235905067ffffffffffffffff81111561050c57600080fd5b60208301915083602082028301111561052457600080fd5b9250929050565b60008151905061053a81610b1c565b92915050565b60008135905061054f81610b33565b92915050565b60006020828403121561056757600080fd5b60006105758482850161052b565b91505092915050565b60006020828403121561059057600080fd5b600061059e84828501610540565b91505092915050565b6000806000806000608086880312156105bf57600080fd5b60006105cd88828901610540565b95505060206105de888289016104cc565b94505060406105ef88828901610540565b935050606086013567ffffffffffffffff81111561060c57600080fd5b610618888289016104e1565b92509250509295509295909350565b61063081610996565b82525050565b61064761064282610996565b610a31565b82525050565b610656816109a8565b82525050565b610665816109b4565b82525050565b61067c610677826109b4565b610a43565b82525050565b600061068f602883610954565b91507f4d65726b6c654469737472696275746f723a2044726f7020616c72656164792060008301527f636c61696d65642e0000000000000000000000000000000000000000000000006020830152604082019050919050565b60006106f5602383610954565b91507f4d65726b6c654469737472696275746f723a205472616e73666572206661696c60008301527f65642e00000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061075b602183610954565b91507f4d65726b6c654469737472696275746f723a20496e76616c69642050726f6f6660008301527f2e000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6107bd816109de565b82525050565b6107d46107cf826109de565b610a5f565b82525050565b60006107e6828561066b565b6020820191506107f6828461066b565b6020820191508190509392505050565b600061081282866107c3565b6020820191506108228285610636565b60148201915061083282846107c3565b602082019150819050949350505050565b60006020820190506108586000830184610627565b92915050565b60006040820190506108736000830185610627565b61088060208301846107b4565b9392505050565b600060208201905061089c600083018461064d565b92915050565b60006020820190506108b7600083018461065c565b92915050565b600060208201905081810360008301526108d681610682565b9050919050565b600060208201905081810360008301526108f6816106e8565b9050919050565b600060208201905081810360008301526109168161074e565b9050919050565b600060608201905061093260008301866107b4565b61093f6020830185610627565b61094c60408301846107b4565b949350505050565b600082825260208201905092915050565b6000610970826109de565b915061097b836109de565b92508261098b5761098a610ac9565b5b828204905092915050565b60006109a1826109be565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109f3826109de565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a2657610a25610a9a565b5b600182019050919050565b6000610a3c82610a4d565b9050919050565b6000819050919050565b6000610a5882610af8565b9050919050565b6000819050919050565b6000610a74826109de565b9150610a7f836109de565b925082610a8f57610a8e610ac9565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008160601b9050919050565b610b0e81610996565b8114610b1957600080fd5b50565b610b25816109a8565b8114610b3057600080fd5b50565b610b3c816109de565b8114610b4757600080fd5b5056fea264697066735822122029d4c0428db3a41c760fab7a950c01540024f79765ff90fbf5e773ea1a89488864736f6c63430008000033";

type MerkleDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MerkleDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MerkleDistributor__factory extends ContractFactory {
  constructor(...args: MerkleDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _token: string,
    _merkleRoot: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MerkleDistributor> {
    return super.deploy(
      _token,
      _merkleRoot,
      overrides || {}
    ) as Promise<MerkleDistributor>;
  }
  getDeployTransaction(
    _token: string,
    _merkleRoot: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _merkleRoot, overrides || {});
  }
  attach(address: string): MerkleDistributor {
    return super.attach(address) as MerkleDistributor;
  }
  connect(signer: Signer): MerkleDistributor__factory {
    return super.connect(signer) as MerkleDistributor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleDistributorInterface {
    return new utils.Interface(_abi) as MerkleDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleDistributor {
    return new Contract(address, _abi, signerOrProvider) as MerkleDistributor;
  }
}
