/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "testing",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000cc638038062000cc6833981810160405281019062000037919062000278565b6200006760405180606001604052806022815260200162000ca460229139826200008760201b6200021a1760201c565b80600090805190602001906200007f92919062000156565b505062000497565b620001298282604051602401620000a0929190620002fe565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200012d60201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546200016490620003f2565b90600052602060002090601f016020900481019282620001885760008555620001d4565b82601f10620001a357805160ff1916838001178555620001d4565b82800160010185558215620001d4579182015b82811115620001d3578251825591602001919060010190620001b6565b5b509050620001e39190620001e7565b5090565b5b8082111562000202576000816000905550600101620001e8565b5090565b60006200021d62000217846200036d565b62000339565b9050828152602081018484840111156200023657600080fd5b62000243848285620003bc565b509392505050565b600082601f8301126200025d57600080fd5b81516200026f84826020860162000206565b91505092915050565b6000602082840312156200028b57600080fd5b600082015167ffffffffffffffff811115620002a657600080fd5b620002b4848285016200024b565b91505092915050565b6000620002ca82620003a0565b620002d68185620003ab565b9350620002e8818560208601620003bc565b620002f38162000486565b840191505092915050565b600060408201905081810360008301526200031a8185620002bd565b90508181036020830152620003308184620002bd565b90509392505050565b6000604051905081810181811067ffffffffffffffff8211171562000363576200036262000457565b5b8060405250919050565b600067ffffffffffffffff8211156200038b576200038a62000457565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620003dc578082015181840152602081019050620003bf565b83811115620003ec576000848401525b50505050565b600060028204905060018216806200040b57607f821691505b6020821081141562000422576200042162000428565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6107fd80620004a76000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631d10ae7114610046578063a413686214610076578063cfae321714610092575b600080fd5b610060600480360381019061005b91906104df565b6100b0565b60405161006d9190610608565b60405180910390f35b610090600480360381019061008b919061049e565b6100c1565b005b61009a610188565b6040516100a79190610563565b60405180910390f35b6000826001901b8217905092915050565b61016e6040518060600160405280602381526020016107a560239139600080546100ea906106ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610116906106ec565b80156101635780601f1061013857610100808354040283529160200191610163565b820191906000526020600020905b81548152906001019060200180831161014657829003601f168201915b5050505050836102b6565b806000908051906020019061018492919061037e565b5050565b606060008054610197906106ec565b80601f01602080910402602001604051908101604052809291908181526020018280546101c3906106ec565b80156102105780601f106101e557610100808354040283529160200191610210565b820191906000526020600020905b8154815290600101906020018083116101f357829003601f168201915b5050505050905090565b6102b28282604051602401610230929190610585565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610355565b5050565b6103508383836040516024016102ce939291906105bc565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610355565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b82805461038a906106ec565b90600052602060002090601f0160209004810192826103ac57600085556103f3565b82601f106103c557805160ff19168380011785556103f3565b828001600101855582156103f3579182015b828111156103f25782518255916020019190600101906103d7565b5b5090506104009190610404565b5090565b5b8082111561041d576000816000905550600101610405565b5090565b600061043461042f84610654565b610623565b90508281526020810184848401111561044c57600080fd5b6104578482856106aa565b509392505050565b600082601f83011261047057600080fd5b8135610480848260208601610421565b91505092915050565b6000813590506104988161078d565b92915050565b6000602082840312156104b057600080fd5b600082013567ffffffffffffffff8111156104ca57600080fd5b6104d68482850161045f565b91505092915050565b600080604083850312156104f257600080fd5b600061050085828601610489565b925050602061051185828601610489565b9150509250929050565b600061052682610684565b610530818561068f565b93506105408185602086016106b9565b6105498161077c565b840191505092915050565b61055d816106a0565b82525050565b6000602082019050818103600083015261057d818461051b565b905092915050565b6000604082019050818103600083015261059f818561051b565b905081810360208301526105b3818461051b565b90509392505050565b600060608201905081810360008301526105d6818661051b565b905081810360208301526105ea818561051b565b905081810360408301526105fe818461051b565b9050949350505050565b600060208201905061061d6000830184610554565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561064a5761064961074d565b5b8060405250919050565b600067ffffffffffffffff82111561066f5761066e61074d565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b82818337600083830152505050565b60005b838110156106d75780820151818401526020810190506106bc565b838111156106e6576000848401525b50505050565b6000600282049050600182168061070457607f821691505b602082108114156107185761071761071e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610796816106a0565b81146107a157600080fd5b5056fe4368616e67696e67206772656574696e672066726f6d202725732720746f2027257327a2646970667358221220da24bccb7013ceab70cf1bd2513080f8ac54d737e6fcaab4890f92e105403fcf64736f6c634300080000334465706c6f79696e67206120477265657465722077697468206772656574696e673a";

type GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greeter__factory extends ContractFactory {
  constructor(...args: GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Greeter> {
    return super.deploy(_greeting, overrides || {}) as Promise<Greeter>;
  }
  getDeployTransaction(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
